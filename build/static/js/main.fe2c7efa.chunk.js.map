{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","profileData","setProfileData","useState","loading","setLoading","error","setError","React","createElement","className","FileUploader","onFileSelect","async","formData","FormData","append","file","response","axios","post","headers","data","err","ProfileViewer","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0VAkDeA,MA5Cf,WACE,MAAOC,EAAaC,GAAkBC,mBAAS,OACxCC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,IA2BnC,OACEK,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAACE,IAAY,CAACC,aA7BKC,UACvB,IACER,GAAW,GACX,MAAMS,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQC,GAExB,MAAMC,QAAiBC,IAAMC,KAC3B,qCACAN,EACA,CACEO,QAAS,CACP,eAAgB,yBAKtBnB,EAAegB,EAASI,MACxBf,EAAS,IACT,MAAOgB,GACPhB,EAAS,mDACV,QACCF,GAAW,OASRD,GAAWI,IAAAC,cAAA,SAAG,0BACdH,GAASE,IAAAC,cAAA,KAAGC,UAAU,SAASJ,IAGjCL,GAAeO,IAAAC,cAACe,IAAa,CAACvB,YAAaA,MCjCnCwB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,IAAAC,cAACD,IAAMgC,WAAU,KACfhC,IAAAC,cAACT,EAAG,QAORyB,M","file":"static/js/main.fe2c7efa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport FileUploader from './components/FileUploader';\nimport ProfileViewer from './components/ProfileView';\nimport './App.css';\n\nfunction App() {\n  const [profileData, setProfileData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleFileUpload = async (file) => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post(\n        'http://localhost:8000/api/profile/',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n\n      setProfileData(response.data);\n      setError('');\n    } catch (err) {\n      setError('Error processing file. Please check the format.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>CSV Data Profiler</h1>\n        <FileUploader onFileSelect={handleFileUpload} />\n        {loading && <p>Analyzing your file...</p>}\n        {error && <p className=\"error\">{error}</p>}\n      </header>\n\n      {profileData && <ProfileViewer profileData={profileData} />}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}