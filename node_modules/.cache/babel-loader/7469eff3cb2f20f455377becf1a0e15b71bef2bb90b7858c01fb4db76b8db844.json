{"ast":null,"code":"var _jsxFileName = \"/Users/hamzafaisal/dataprofile-frontend/src/components/ProfileView.js\";\nimport React from 'react';\nimport { Paper, Typography, Grid } from '@mui/material';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileViewer({\n  profileData\n}) {\n  if (!profileData) return null;\n\n  // Sample chart for numeric columns\n  const numericChartData = {\n    labels: Object.keys(profileData.column_analysis).filter(col => profileData.column_analysis[col].type === 'numeric'),\n    datasets: [{\n      label: 'Average Values',\n      data: Object.values(profileData.column_analysis).filter(col => col.type === 'numeric').map(col => col.stats.mean),\n      backgroundColor: '#2196f3'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Data Profile Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), \" \", profileData.overview.num_rows]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Columns:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \" \", profileData.overview.num_columns]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Numeric Columns Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: numericChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), Object.entries(profileData.column_analysis).map(([colName, colData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: colName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(colData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, colName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ProfileViewer;\nvar _c;\n$RefreshReg$(_c, \"ProfileViewer\");","map":{"version":3,"names":["React","Paper","Typography","Grid","Bar","jsxDEV","_jsxDEV","ProfileViewer","profileData","numericChartData","labels","Object","keys","column_analysis","filter","col","type","datasets","label","data","values","map","stats","mean","backgroundColor","elevation","sx","p","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","className","container","spacing","item","xs","overview","num_rows","num_columns","entries","colName","colData","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/hamzafaisal/dataprofile-frontend/src/components/ProfileView.js"],"sourcesContent":["import React from 'react';\nimport { Paper, Typography, Grid } from '@mui/material';\nimport { Bar } from 'react-chartjs-2';\n\nexport default function ProfileViewer({ profileData }) {\n  if (!profileData) return null;\n\n  // Sample chart for numeric columns\n  const numericChartData = {\n    labels: Object.keys(profileData.column_analysis).filter(\n      col => profileData.column_analysis[col].type === 'numeric'\n    ),\n    datasets: [{\n      label: 'Average Values',\n      data: Object.values(profileData.column_analysis)\n        .filter(col => col.type === 'numeric')\n        .map(col => col.stats.mean),\n      backgroundColor: '#2196f3'\n    }]\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, mt: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Data Profile Report\n      </Typography>\n\n      {/* Overview Section */}\n      <div className=\"section\">\n        <Typography variant=\"h6\">Overview</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <strong>Rows:</strong> {profileData.overview.num_rows}\n          </Grid>\n          <Grid item xs={4}>\n            <strong>Columns:</strong> {profileData.overview.num_columns}\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* Numeric Columns Chart */}\n      <div className=\"section\">\n        <Typography variant=\"h6\">Numeric Columns Analysis</Typography>\n        <Bar data={numericChartData} />\n      </div>\n\n      {/* Column Details */}\n      {Object.entries(profileData.column_analysis).map(([colName, colData]) => (\n        <div key={colName} className=\"section\">\n          <Typography variant=\"h6\">{colName}</Typography>\n          <pre>{JSON.stringify(colData, null, 2)}</pre>\n        </div>\n      ))}\n    </Paper>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}